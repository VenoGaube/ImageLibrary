arguments: C:/Users/Veno/Desktop/ImageLibrary/UserInterface.py
--------------------
tensorflow version: 1.7.0
--------------------
git hash: b'fc3071ae087499a535ffff47a9cd585a6cbaee94'
--------------------
b'diff --git a/findImages.py b/findImages.py\nindex 227942b..77416c0 100644\n--- a/findImages.py\n+++ b/findImages.py\n@@ -56,20 +56,23 @@ def search_directory(rootdir, array):\n                 image_date, orientation = get_date(rootdir)\n                 image = Image.open(rootdir)\n                 if orientation == 3:\n+                    exif = image.info[\'exif\']\n                     image = image.rotate(180, expand=True)\n-                    image.save(rootdir)\n+                    image.save(rootdir, \'JPEG\', exif=exif)\n                     image.close()\n                 elif orientation == 6:\n+                    exif = image.info[\'exif\']\n                     image = image.rotate(270, expand=True)\n-                    image.save(rootdir)\n+                    image.save(rootdir, \'JPEG\', exif=exif)\n                     image.close()\n                 elif orientation == 8:\n+                    exif = image.info[\'exif\']\n                     image = image.rotate(90, expand=True)\n-                    image.save(rootdir)\n+                    image.save(rootdir, \'JPEG\', exif=exif)\n                     image.close()\n \n                 # \xc4\x8ce smo dobili nek datum in \xc4\x8das potem gremo v if, druga\xc4\x8de to sliko popolnoma presko\xc4\x8dimo\n-                if image_date is not None:\n+                if image_date is not None or orientation is not None:\n                     # Dodamo sliko in podatke v array\n                     gallery_dir = path_gallery\n                     copy2(rootdir, gallery_dir)\n@@ -125,6 +128,7 @@ def resize_images(path):\n         if slika.name.endswith(".txt"):\n             continue\n         resized = Image.open(slika)\n+        exif = resized.info[\'exif\']\n         shape = resized.size\n         shape = list(shape)\n         shape[0] = int(shape[0] * resize)\n@@ -132,5 +136,5 @@ def resize_images(path):\n         print(\'\\rLoading: /\', end="")\n         resized_img = resized.resize(tuple(shape), Image.ANTIALIAS)\n         print(\'\\rLoading: -\', end="")\n-        resized_img.save(slika)\n+        resized_img.save(slika, \'JPEG\', exif=exif)\n         print(\'\\rLoading: \\\\\', end="")\n\\ No newline at end of file'